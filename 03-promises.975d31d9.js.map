{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,uBACjCE,QAASH,SAASC,cAAc,sBAChCG,UAAWJ,SAASC,cAAc,wBAClCI,UAAWL,SAASC,cAAc,WAGpC,SAASK,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKPV,EAAKC,QAAQgB,iBAAiB,UAAU,SAACC,GACvCA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOrB,EAAKI,SAASkB,OAC7BC,EAAOF,OAAOrB,EAAKK,QAAQiB,OAC3BE,EAASH,OAAOrB,EAAKM,UAAUgB,OAE1BG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEvEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEpEwB,SAAQ,WACPlC,EAAKC,QAAQkC,O,IAEjBf,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formRef: document.querySelector(\".form\"),\n  delayRef: document.querySelector('input[name=\"delay\"]'),\n  stepRef: document.querySelector('input[name=\"step\"]'),\n  amountRef: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector(\"button\"),\n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n};\n\nrefs.formRef.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  let delay = Number(refs.delayRef.value);\n  let step = Number(refs.stepRef.value);\n  let amount = Number(refs.amountRef.value);\n\n  for (let i = 1; i <= amount; i += 1){\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        refs.formRef.reset();\n      });\n    delay += step;\n  };\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","delayRef","stepRef","amountRef","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","reset"],"version":3,"file":"03-promises.975d31d9.js.map"}